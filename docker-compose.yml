version: "3.8"

volumes:
  rabbitmq_data:

services:
  ####################################
  # RabbitMQ: The messaging broker   
  ####################################
  rabbitmq:
    image: rabbitmq:3-management
    hostname: esd-rabbit
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes: 
      - rabbitmq_data:/var/lib/rabbitmq

  #################################
  # SIMPLE MICROSERVICES 
  #################################

  auth:
    build: 
      context: ./backend/simple_microservices/auth
      dockerfile: auth.Dockerfile
    image: lixuenlow/auth:freebee
    restart: always
    ports:
      - 3001:3001

  geocoding:
    build: 
      context: ./backend/simple_microservices/geocoding
      dockerfile: geocoding.Dockerfile
    image: lixuenlow/geocoding:freebee
    restart: always
    ports:
      - 3000:3000
  
  imaging:
    build: 
      context: ./backend/simple_microservices/image
      dockerfile: image.Dockerfile
    image: lixuenlow/image:freebee
    restart: always
    ports:
      - 3002:3002

  listing:
    build: 
      context: ./backend/simple_microservices/listing
      dockerfile: listing.Dockerfile
    image: lixuenlow/listing:freebee
    restart: always
    environment:
      PYTHONUNBUFFERED: 1
    ports:
      - 8000:8000

  notification:
    build: 
      context: ./backend/simple_microservices/notification
      dockerfile: notification.Dockerfile
    image: lixuenlow/notification:freebee
    restart: always
    ports:
      - 5005:5005

  transaction:
    build: 
      context: ./backend/simple_microservices/transaction
      dockerfile: transaction.Dockerfile
    image: lixuenlow/transaction:freebee
    restart: always
    environment:
      PYTHONUNBUFFERED: 1
    ports:
      - 9000:9000

  user:
    build: 
      context: ./backend/simple_microservices/user
      dockerfile: user.Dockerfile
    image: lixuenlow/user:freebee
    restart: always
    environment:
      PYTHONUNBUFFERED: 1
    ports:
      - 8421:8421

  ###############################################
  # COMPLEX MICROSERVICES
  ###############################################
  
  listing_management:
    build: 
      context: ./backend/complex_microservices/listing_management
      dockerfile: listing_management.Dockerfile
    image: lixuenlow/listing_management:freebee
    restart: always
    depends_on:
      - rabbitmq
      - listing
      - auth
      - geocoding
      - imaging
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      listing_URL: http://listing:8000
      geocoding_URL: http://geocoding:3000
      auth_URL: http://auth:3001/auth/checkaccess/
      image_URL: http://imaging:3002/image
      PYTHONUNBUFFERED: 1
    ports:
      - 5000:5000

  transaction_management:
    build: 
      context: ./backend/complex_microservices/transaction_management
      dockerfile: transaction_management.Dockerfile
    image: lixuenlow/transaction_management:freebee
    restart: always
    depends_on:
      - rabbitmq
      - listing
      - transaction
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      transaction_URL: http://transaction:9000/transaction
      listing_URL: http://listing:8000/listing
      auth_URL: http://auth:3001/auth/checkaccess/
      PYTHONUNBUFFERED: 1
    ports:
      - 5100:5100

  notification_management:
    build: 
      context: ./backend/complex_microservices/notification_management
      dockerfile: notification_management.Dockerfile
    image: lixuenlow/notification_management:freebee
    restart: always
    depends_on:
      - rabbitmq
      - notification
      - transaction
      - user
      - listing
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      listing_URL: http://listing:8000/listing
      user_URL: http://user:8421
      notification_URL: http://notification:5005/sendmail
      transaction_URL: http://transaction:9000/transaction
      PYTHONUNBUFFERED: 1
    ports: 
      - 5001:5001

  # #################################
  # # FRONTEND
  # #################################
  # frontend:
  #   build: 
  #     context: ./frontend
  #     dockerfile: frontend.dockerfile
  #   restart: always
  #   depends_on: 
  #     - listing_management
  #     - transaction_management
  #     - notification_management
  #   environment:
  #   ports: 
  #     - 8080:8080

